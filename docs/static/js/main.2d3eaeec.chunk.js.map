{"version":3,"sources":["components/AddCategory/AddCategory.jsx","components/AddCategory/GifGridItem.jsx","helpers/getGifs.js","hooks/useFetchGifs.js","components/AddCategory/ImgCategory.jsx","views/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","action","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGif","a","fetch","resp","json","data","gifs","map","gif","images","downsized_medium","useFetchGifs","categories","loading","state","setState","useEffect","then","ImgCategory","console","log","img","GifExpertApp","cat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAgCeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAUA,OACE,qCACE,6CACA,sBAAMC,OAAO,GAAGC,SARC,SAACC,GACpBA,EAAEC,iBACFL,EAAWM,OAAOC,OAAS,GAAKT,GAAc,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACtEP,EAAc,KAKZ,SACE,uBACEQ,KAAK,OACLC,MAAOV,EACPW,SAhBkB,SAACP,GACzBH,EAAcG,EAAEQ,OAAOF,gB,QCIZG,EARK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCRJK,EAAM,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,sEACMC,MAAMN,GADZ,cACPO,EADO,gBAEUA,EAAKC,OAFf,uBAELC,EAFK,EAELA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLd,GAAIc,EAAId,GACRC,MAAOa,EAAIb,MACXC,IAAG,UAAEY,EAAIC,cAAN,aAAE,EAAYC,iBAAiBd,QAPzB,kBAUNU,GAVM,2CAAH,sDAaGN,ICMAW,EAhBM,SAACC,GACpB,MAA0BjC,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAU,WACR,IAAMpB,EAAG,0FAAsFgB,EAAtF,YACTZ,EAAOJ,GACJqB,MAAK,SAAAX,GAAI,OAAIS,EAAS,CACrBV,KAAMC,EACNO,SAAS,SAEZ,CAACD,IACGE,GCUMI,EArBK,SAAC,GAAoB,IAAlBN,EAAiB,EAAjBA,WACrB,EAA0BD,EAAaC,GAA/BP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,QAKd,OAJAM,QAAQC,IAAIf,GACZc,QAAQC,IAAIP,GAIV,qCACE,4BAAID,IACHC,GAAW,4CACZ,qBAAKhB,UAAU,YAAf,SAEIQ,EAAKE,KAAI,SAAAc,GAAG,OAAI,cAAC,EAAD,eAEVA,GADCA,EAAI3B,aCKN4B,EApBM,WACnB,MAAoC3C,mBAAS,CAAC,gBAA9C,mBAAOiC,EAAP,KAAmBlC,EAAnB,KAEA,OACE,qCACE,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEIkC,EAAWL,KAAI,SAAAgB,GAAG,OAChB,cAAC,EAAD,CAEEX,WAAYW,GADPA,YCRnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.2d3eaeec.chunk.js","sourcesContent":["// Developed by @ciucol\n// 01/10/2021\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\")\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    inputValue.trim().length > 0 && setCategories(cats => [inputValue, ...cats])\n    setInputValue('')\n  }\n  return (\n    <>\n      <h3>AddCategory</h3>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n        />\n      </form>\n    </>\n  )\n}\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\nexport default AddCategory\n","// Developed by @ciucol\n// 02/10/2021\nimport React from 'react'\n\nconst GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\nexport default GifGridItem\n","const getGif = async (url) => {\n  const resp = await fetch(url)\n  const { data } = await resp.json()\n  const gifs = data.map(gif => {\n    return {\n      id: gif.id,\n      title: gif.title,\n      url: gif.images?.downsized_medium.url,\n    }\n  })\n  return gifs\n}\n\nexport default getGif","import { useEffect, useState } from \"react\"\nimport getGif from \"../helpers/getGifs\"\n\nconst useFetchGifs = (categories) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect(() => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=RRRHXaPkZZzXfLEn3mHdr1A31inQfHRW&q=${categories}&limit=5`\n    getGif(url)\n      .then(gifs => setState({\n        data: gifs,\n        loading: false\n      }))\n  }, [categories])\n  return state\n}\nexport default useFetchGifs","// Developed by @ciucol\n// 01/10/2021\nimport React from 'react'\nimport GifGridItem from './GifGridItem'\nimport useFetchGifs from '../../hooks/useFetchGifs'\n\nconst ImgCategory = ({ categories }) => {\n  const { data, loading } = useFetchGifs(categories)\n  console.log(data)\n  console.log(loading)\n\n\n  return (\n    <>\n      <p>{categories}</p>\n      {loading && <p>Cargando...</p>}\n      <div className=\"card-grid\">\n        {\n          data.map(img => <GifGridItem\n            key={img.id}\n            {...img}\n          />)\n        }\n      </div>\n    </>\n  )\n}\nexport default ImgCategory\n","import React, { useState } from 'react'\nimport AddCategory from '../components/AddCategory/AddCategory'\nimport ImgCategory from '../components/AddCategory/ImgCategory'\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"Dragon Ball\"])\n\n  return (\n    <>\n      <AddCategory setCategories={setCategories} />\n      <ol>\n        {\n          categories.map(cat => (\n            <ImgCategory\n              key={cat}\n              categories={cat}\n            />\n          ))\n        }\n      </ol>\n    </>\n  )\n}\n\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Counter from './views/Counter';\nimport GifExpertApp from './views/GifExpertApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n    {/* <Counter /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}